{
  "comments": [
    {
      "unresolved": false,
      "key": {
        "uuid": "63645032_2fbf646f",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 2891
      },
      "writtenOn": "2023-11-06T20:36:24Z",
      "side": 1,
      "message": "This does fix the problem _but_ Scott tells me that it might not be recommended. I think you better discuss that first :)",
      "revId": "063af9a97dfbe1aac53265d6172c1aca5a23fafb",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e"
    },
    {
      "unresolved": false,
      "key": {
        "uuid": "bb4de830_e4ea86db",
        "filename": "/PATCHSET_LEVEL",
        "patchSetId": 1
      },
      "lineNbr": 0,
      "author": {
        "id": 597
      },
      "writtenOn": "2023-11-06T20:52:24Z",
      "side": 1,
      "message": "This is not a good idea IMO, and reverting it and having to document the new host requirement to build meta-flutter related things would be preferable (or some other option, see below).  BitBake runs Python tasks internally with compile+exec, so they are run with the host Python.  That Python is not necessarily always going to be compatible with a module built with and for python3-native.\n\nIf you do want to drop the need for pyyaml on the host, then another approach would be to inherit python3native, have python3-pyyaml-native in DEPENDS, and then either use a one-liner \"python3 -c blah\" or emit a script and run in a shell task.  I think that would be not too bad if the only thing you are getting from pubspec.yaml is the application name to check against PUBSPEC_APPNAME, it could just be in separate a task that runs before do_compile.  Another perhaps less optimal option would be to maybe just use a \u0027^name:\u0027 regular expression to get the name...",
      "revId": "063af9a97dfbe1aac53265d6172c1aca5a23fafb",
      "serverId": "2db66874-6d0c-4434-a3ad-56d904acc56e"
    }
  ]
}